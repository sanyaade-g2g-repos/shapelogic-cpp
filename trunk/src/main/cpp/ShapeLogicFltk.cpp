/*
 * shapelogic-cpp.cxx
 *
 *  Created on: Sep 17, 2008
 *      Author: Sami Badawi
 */

// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "ShapeLogicFltk.h"
#include <iostream>
#include <FL/Fl_File_Chooser.H>
#include <FL/Fl_JPEG_Image.H>
#include "FltkUtil.h"
#include "shapelogic-cpp.h"
#include <FL/Fl_Color_Chooser.H>
static const char * appLabel = "ShapeLogic C++ v 0.4 ";

void ShapeLogicFltk::cb_Open_i(Fl_Menu_*, void*) {
  const char * filename = FltkUtil::singleFileDialog(true);
imageSetup("Open", filename);
updateLabel();
}
void ShapeLogicFltk::cb_Open(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Open_i(o,v);
}

void ShapeLogicFltk::cb_Save_i(Fl_Menu_*, void*) {
  imageSetup("Save", NULL);
updateLabel();
}
void ShapeLogicFltk::cb_Save(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Save_i(o,v);
}

void ShapeLogicFltk::cb_Save1_i(Fl_Menu_*, void*) {
  const char * filename = FltkUtil::singleFileDialog(false);
imageSetup("Save_As", filename);
updateLabel();
}
void ShapeLogicFltk::cb_Save1(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Save1_i(o,v);
}

void ShapeLogicFltk::cb_Quit_i(Fl_Menu_*, void*) {
  imageSetup("Quit", NULL);
}
void ShapeLogicFltk::cb_Quit(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Quit_i(o,v);
}

void ShapeLogicFltk::cb_Undo_i(Fl_Menu_*, void*) {
  imageSetup("Undo", NULL);
updateLabel();
}
void ShapeLogicFltk::cb_Undo(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Undo_i(o,v);
}

void ShapeLogicFltk::cb_Clear_i(Fl_Menu_*, void*) {
  imageSetup("Clear", NULL);
}
void ShapeLogicFltk::cb_Clear(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Clear_i(o,v);
}

void ShapeLogicFltk::cb_Fill_i(Fl_Menu_*, void*) {
  imageSetup("Fill", NULL);
}
void ShapeLogicFltk::cb_Fill(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Fill_i(o,v);
}

void ShapeLogicFltk::cb_Invert_i(Fl_Menu_*, void*) {
  imageSetup("Invert", NULL);
}
void ShapeLogicFltk::cb_Invert(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Invert_i(o,v);
}

void ShapeLogicFltk::cb_Gray8_i(Fl_Menu_*, void*) {
  imageSetup("Gray8", NULL);
}
void ShapeLogicFltk::cb_Gray8(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Gray8_i(o,v);
}

void ShapeLogicFltk::cb_RGB8_i(Fl_Menu_*, void*) {
  imageSetup("RGB8", NULL);
}
void ShapeLogicFltk::cb_RGB8(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_RGB8_i(o,v);
}

void ShapeLogicFltk::cb_Threshold_i(Fl_Menu_*, void*) {
  imageSetup("Threshold", NULL);
}
void ShapeLogicFltk::cb_Threshold(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Threshold_i(o,v);
}

void ShapeLogicFltk::cb_Foreground_i(Fl_Menu_*, void*) {
  unsigned char * foreground = getImageController()->_foreground;
  fl_color_chooser("Chose foreground color", foreground[0], foreground[1], foreground[2]);
}
void ShapeLogicFltk::cb_Foreground(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Foreground_i(o,v);
}

void ShapeLogicFltk::cb_Background_i(Fl_Menu_*, void*) {
  unsigned char * background = getImageController()->_background;
  fl_color_chooser("Chose foreground color", background[0], background[1], background[2]);
}
void ShapeLogicFltk::cb_Background(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Background_i(o,v);
}

void ShapeLogicFltk::cb_Swap_RB_i(Fl_Menu_*, void*) {
  imageSetup("Swap_RB", NULL);
}
void ShapeLogicFltk::cb_Swap_RB(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Swap_RB_i(o,v);
}

void ShapeLogicFltk::cb_Flip_Horizontally_i(Fl_Menu_*, void*) {
  imageSetup("Flip_Horizontally", NULL);
}
void ShapeLogicFltk::cb_Flip_Horizontally(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Flip_Horizontally_i(o,v);
}

void ShapeLogicFltk::cb_Flip_Vertically_i(Fl_Menu_*, void*) {
  imageSetup("Flip_Vertically", NULL);
}
void ShapeLogicFltk::cb_Flip_Vertically(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Flip_Vertically_i(o,v);
}

void ShapeLogicFltk::cb_None_i(Fl_Menu_*, void*) {
  imageSetup("Brush", "None");
}
void ShapeLogicFltk::cb_None(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_None_i(o,v);
}

void ShapeLogicFltk::cb_Pen_i(Fl_Menu_*, void*) {
  imageSetup("Brush", "Pen");
}
void ShapeLogicFltk::cb_Pen(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Pen_i(o,v);
}

void ShapeLogicFltk::cb_Point_info_i(Fl_Menu_*, void*) {
  imageSetup("Brush", "Point_info");
}
void ShapeLogicFltk::cb_Point_info(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Point_info_i(o,v);
}

void ShapeLogicFltk::cb_Sample_color_i(Fl_Menu_*, void*) {
  imageSetup("Brush", "Sample_color");
}
void ShapeLogicFltk::cb_Sample_color(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Sample_color_i(o,v);
}

void ShapeLogicFltk::cb_Dilate_i(Fl_Menu_*, void*) {
  imageSetup("Dilate", NULL);
}
void ShapeLogicFltk::cb_Dilate(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Dilate_i(o,v);
}

void ShapeLogicFltk::cb_Erode_i(Fl_Menu_*, void*) {
  imageSetup("Erode", NULL);
}
void ShapeLogicFltk::cb_Erode(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Erode_i(o,v);
}

void ShapeLogicFltk::cb_Smooth_i(Fl_Menu_*, void*) {
  imageSetup("Blur", NULL);
}
void ShapeLogicFltk::cb_Smooth(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Smooth_i(o,v);
}

void ShapeLogicFltk::cb_Signed_Gradient_i(Fl_Menu_*, void*) {
  imageSetup("Signed_Gradient", NULL);
}
void ShapeLogicFltk::cb_Signed_Gradient(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Signed_Gradient_i(o,v);
}

void ShapeLogicFltk::cb_Sobel_X_i(Fl_Menu_*, void*) {
  imageSetup("Sobel_X", NULL);
}
void ShapeLogicFltk::cb_Sobel_X(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Sobel_X_i(o,v);
}

void ShapeLogicFltk::cb_Sobel_Y_i(Fl_Menu_*, void*) {
  imageSetup("Sobel_Y", NULL);
}
void ShapeLogicFltk::cb_Sobel_Y(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Sobel_Y_i(o,v);
}

void ShapeLogicFltk::cb_Sobel_XY_i(Fl_Menu_*, void*) {
  imageSetup("Sobel_XY", NULL);
}
void ShapeLogicFltk::cb_Sobel_XY(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Sobel_XY_i(o,v);
}

void ShapeLogicFltk::cb_Canny_Edge_i(Fl_Menu_*, void*) {
  imageSetup("Canny_Edge", NULL);
}
void ShapeLogicFltk::cb_Canny_Edge(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_Canny_Edge_i(o,v);
}

void ShapeLogicFltk::cb_About_i(Fl_Menu_*, void*) {
  imageSetup("About", NULL);
}
void ShapeLogicFltk::cb_About(Fl_Menu_* o, void* v) {
  ((ShapeLogicFltk*)(o->parent()->user_data()))->cb_About_i(o,v);
}

Fl_Menu_Item ShapeLogicFltk::menu_[] = {
 {"File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Open...", 0x4006f,  (Fl_Callback*)ShapeLogicFltk::cb_Open, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Save", 0x40073,  (Fl_Callback*)ShapeLogicFltk::cb_Save, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Save As...", 0x40061,  (Fl_Callback*)ShapeLogicFltk::cb_Save1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Quit", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Quit, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Edit", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Undo", 0x4007a,  (Fl_Callback*)ShapeLogicFltk::cb_Undo, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"Clear", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Clear, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Fill", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Fill, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"Invert", 0x50069,  (Fl_Callback*)ShapeLogicFltk::cb_Invert, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Image", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Type", 0,  0, 0, 192, FL_NORMAL_LABEL, 0, 14, 0},
 {"Gray8", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Gray8, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"RGB8", 0,  (Fl_Callback*)ShapeLogicFltk::cb_RGB8, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Adjust", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Threshold...", 0x50074,  (Fl_Callback*)ShapeLogicFltk::cb_Threshold, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Color", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Foreground", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Foreground, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Background", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Background, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Swap_RB", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Swap_RB, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Rotate", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Flip_Horizontally", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Flip_Horizontally, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Flip_Vertically", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Flip_Vertically, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0},
 {"Brushes", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"None", 0,  (Fl_Callback*)ShapeLogicFltk::cb_None, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Pen", 0xc0070,  (Fl_Callback*)ShapeLogicFltk::cb_Pen, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Point_info", 0xc0069,  (Fl_Callback*)ShapeLogicFltk::cb_Point_info, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sample_color", 0xc0063,  (Fl_Callback*)ShapeLogicFltk::cb_Sample_color, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Process", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Morphology", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Dilate", 0x50073,  (Fl_Callback*)ShapeLogicFltk::cb_Dilate, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Erode", 0x50073,  (Fl_Callback*)ShapeLogicFltk::cb_Erode, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Smooth", 0x50073,  (Fl_Callback*)ShapeLogicFltk::cb_Smooth, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Signed_Gradient", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Signed_Gradient, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sobel_X", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Sobel_X, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sobel_Y", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Sobel_Y, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sobel_XY", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Sobel_XY, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Canny_Edge", 0,  (Fl_Callback*)ShapeLogicFltk::cb_Canny_Edge, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Plugins", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"ShapeLogic", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"ShapeLogicOld", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0},
 {"Help", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"About ShapeLogic", 0,  (Fl_Callback*)ShapeLogicFltk::cb_About, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

ShapeLogicFltk::ShapeLogicFltk() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = _window = new Fl_Double_Window(730, 600, "ShapeLogic C++ v 0.4");
    w = o;
    o->user_data((void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 730, 20);
      o->menu(menu_);
    }
    { Fl_Scroll* o = _imageScroll = new Fl_Scroll(0, 20, 730, 580);
      o->end();
      Fl_Group::current()->resizable(o);
    }
    { ImageBox* o = _imageBox = new ImageBox(0, 20, 730, 580);
      o->box(FL_NO_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NO_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_FOREGROUND_COLOR);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
    }
    o->end();
  }
  _imageBox->setScroll(_imageScroll); 
      w->show();
}

void ShapeLogicFltk::imageSetup(const char* command, const char* arg) {
  getImageController()->run(command, arg);
  if (0 == strcmp("Brush",command))
	  return;
  if (NULL == getImageController()->getCurrentImage())
	  return;
  getImageController()->getCurrentImage()->uncache();
  _imageScroll->clear(); //Removes and deletes all children
  int menuBarHeight = 20;
  _imageBox = new ImageBox(0,menuBarHeight,getImageController()->getCurrentImage()->w(),getImageController()->getCurrentImage()->h());
  _imageScroll->add(_imageBox);
  _imageBox->image(getImageController()->getCurrentImage());
  _window->redraw();
}

void ShapeLogicFltk::updateLabel() {
  std::string fullLabel = appLabel;
  fullLabel += getImageController()->getFilename();
  _window->label(fullLabel.c_str());
}

ImageController * ShapeLogicFltk::getImageController() {
  return ImageController::getInstance();
}

int main_proxy(int argc, char **argv) {
  ShapeLogicFltk shapeLogicFltk;
return Fl::run();
}
