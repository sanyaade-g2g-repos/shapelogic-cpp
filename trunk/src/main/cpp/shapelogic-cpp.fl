# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cpp}
comment {/*
 * shapelogic-cpp.cxx
 *
 *  Created on: Sep 17, 2008
 *      Author: Sami Badawi
 */
} {in_source in_header
} 

decl {\#include <iostream>} {} 

decl {\#include <FL/Fl_File_Chooser.H>} {} 

decl {\#include <FL/Fl_JPEG_Image.H>} {} 

class ShapeLogicFltk {open
} {
  Function {ShapeLogicFltk()} {open
  } {
    Fl_Window _window {
      label {ShapeLogic fltk v 0.1} open
      xywh {248 193 730 600} type Double resizable visible
    } {
      Fl_Menu_Bar {} {open
        xywh {0 0 730 20}
      } {
        Submenu {} {
          label File open
          xywh {0 0 70 21}
        } {
          MenuItem {} {
            label {Open...}
            callback {Fl_File_Chooser chooser(".",			// directory
		    "*",			// filter
		    Fl_File_Chooser::MULTI, 	// chooser type
		    "Title Of Chooser");	// title
  chooser.show();

// Block until user picks something.
//     (The other way to do this is to use a callback())
//
  while(chooser.shown())
  { Fl::wait(); }

// User hit cancel?
  if ( chooser.value() == NULL ) { 
    std::cout << "(User hit 'Cancel')\\n"; 
    return; 
  }

// Print what the user picked
  std::cout << "--------------------\\n";
  std::cout << "DIRECTORY: " << chooser.directory() << std::endl;
  std::cout << "FILE: " << chooser.value() << std::endl;
  const char * filename = chooser.value();
  if (!filename)
    return;
  Fl_JPEG_Image * jpg = new Fl_JPEG_Image(filename);
  if ( jpg->h() == 0 ) {
     std::cout << "image heigh = 0" << std::endl;
    return;
   }
   std::cout << "image width, heigh = "<<jpg->w()<<", "<<jpg->h() << std::endl;
   _imageGroup->image(jpg);
//  _window->resizable(_window);
  _window->redraw();}
            xywh {0 0 36 21} shortcut 0x4006f
          }
          MenuItem {} {
            label Save
            xywh {0 0 36 21} shortcut 0x40073 divider
          }
          MenuItem {} {
            label Quit
            xywh {0 0 36 21}
          }
        }
        Submenu {} {
          label Edit open
          xywh {0 0 70 21}
        } {
          MenuItem {} {
            label Undo
            xywh {0 0 36 21} shortcut 0x4007a divider
          }
          MenuItem {} {
            label Clear
            xywh {0 0 36 21}
          }
          MenuItem {} {
            label Fill
            xywh {0 0 36 21} divider
          }
          MenuItem {} {
            label Invert
            xywh {0 0 36 21} shortcut 0x50069
          }
        }
        Submenu {} {
          label Image open
          xywh {5 5 70 21}
        } {
          Submenu {} {
            label Type open
            xywh {0 0 70 21}
          } {
            MenuItem {} {
              label {8-bit}
              xywh {5 5 36 21}
            }
            MenuItem {} {
              label {16-bit}
              xywh {0 0 36 21}
            }
            MenuItem {} {
              label {RGB Color}
              xywh {0 0 36 21}
            }
          }
        }
        Submenu {} {
          label Process open
          xywh {10 10 70 21}
        } {
          MenuItem {} {
            label Smooth
            xywh {0 0 36 21} shortcut 0x50073
          }
          MenuItem {} {
            label Sharpen
            xywh {0 0 36 21}
          }
        }
        Submenu {} {
          label Plugins open
          xywh {0 0 70 21}
        } {
          Submenu {} {
            label ShapeLogic open
            xywh {5 5 70 21}
          } {}
          Submenu {} {
            label ShapeLogicOld open
            xywh {15 15 70 21}
          } {}
        }
        Submenu {} {
          label Help open
          xywh {0 0 70 21}
        } {
          MenuItem {} {
            label {About ShapeLogic}
            xywh {0 0 36 21}
          }
        }
      }
      Fl_Group _imageGroup {open selected
        xywh {0 20 730 580} resizable
        code0 {_imageGroup->align(FL_ALIGN_CENTER | FL_ALIGN_INSIDE | FL_ALIGN_CLIP);}
      } {}
    }
    code {w->show();} {}
  }
} 

Function {} {open
} {
  code {ShapeLogicFltk shapeLogicFltk;} {}
} 
